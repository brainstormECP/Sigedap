@model Sigedap.Models.Expediente

@{
    ViewBag.Title = "Edit";
}


<div class="container">
    <div class="row">
        <div data-ng-controller="equipoController" class="col-md-12">
            <div class="section-title">
                <h2 class="text-center"><strong>Editar Expediente</strong></h2>
                <div class="line">
                    <hr>
                </div>
                <div class="clearfix"></div>
            </div>
            <div id="equipos_form" class="modal fade">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                            <h4 class="modal-title">Agregar equipo</h4>
                        </div>
                        @{ Html.RenderAction("EquipoDañadoForm",new {id = Model.DictamenDeReclamacionId});}
                    </div>
                </div>
            </div>
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="row">
                    @Html.ValidationSummary(true)
                    @Html.HiddenFor(model => model.DictamenDeReclamacionId)
                    <div class="col-md-12">
                        <div class="col-md-4">
                            @Html.LabelFor(model => model.Numero, new { @class = "control-label col-md-6" })
                            <div class="form-group">
                                @Html.EditorFor(model => model.Numero)
                                @Html.ValidationMessageFor(model => model.Numero)
                            </div>
                        </div>

                        <div class="col-md-4">
                            <label class="col-md-12">Ueb</label>
                            <label class="form-control col-md-12">@Html.DisplayFor(model => model.DictamenDeReclamacion.Ueb)</label>

                        </div>

                        <div class="col-md-4">
                            <label class="col-md-12">Oficina Comercial</label>
                            <label class="form-control col-md-12">@Html.DisplayFor(model => model.DictamenDeReclamacion.OficinaComercial)</label>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <h2 class="text-center">Datos del cliente</h2>
                        <div class="col-md-4">
                            <label class="control-label col-md-12">Nombres y Apellidos</label>
                            <label class="form-control col-md-12">@Html.DisplayFor(model => model.DictamenDeReclamacion.Cliente.NombreCompleto)</label>
                        </div>
                        <div class="col-md-8">
                            <label class="control-label col-md-12">@Html.DisplayNameFor(model => model.DictamenDeReclamacion.Cliente.Direccion)</label>
                            <label class="form-control col-md-12">@Html.DisplayFor(model => model.DictamenDeReclamacion.Cliente.Direccion)</label>
                        </div>
                        <div class="col-md-2">
                            <label class="control-label col-md-12">@Html.DisplayNameFor(model => model.DictamenDeReclamacion.Cliente.TelefonoParticular)</label>
                            <label class="form-control col-md-12">@Html.DisplayFor(model => model.DictamenDeReclamacion.Cliente.TelefonoParticular)</label>
                        </div>
                        <div class="col-md-3">
                            <label class="control-label col-md-12">@Html.DisplayNameFor(model => model.DictamenDeReclamacion.Cliente.TelefonoTrabajo)</label>
                            <label class="form-control col-md-12">@Html.DisplayFor(model => model.DictamenDeReclamacion.Cliente.TelefonoTrabajo)</label>
                        </div>
                        <div class="col-md-3">
                            <label class="control-label col-md-12">@Html.DisplayNameFor(model => model.DictamenDeReclamacion.Cliente.Control)</label>
                            <label class="form-control col-md-12">@Html.DisplayFor(model => model.DictamenDeReclamacion.Cliente.Control)</label>
                        </div>
                        <div class="col-md-2">
                            <label class="control-label col-md-12">@Html.DisplayNameFor(model => model.DictamenDeReclamacion.Cliente.Ruta)</label>
                            <label class="form-control col-md-12">@Html.DisplayFor(model => model.DictamenDeReclamacion.Cliente.Ruta)</label>
                        </div>
                        <div class="col-md-2">
                            <label class="control-label col-md-12">@Html.DisplayNameFor(model => model.DictamenDeReclamacion.Cliente.Folio)</label>
                            <label class="form-control col-md-12">@Html.DisplayFor(model => model.DictamenDeReclamacion.Cliente.Folio)</label>
                        </div>
                        <div class="col-md-4">
                            <label class="control-label col-md-12">Nombres y Apellidos del reclamante</label>
                            <label class="form-control col-md-12">@Html.DisplayFor(model => model.DictamenDeReclamacion.NombreReclamante)</label>
                        </div>
                        <div class="col-md-2">
                            <label class="control-label col-md-12">@Html.DisplayNameFor(model => model.DictamenDeReclamacion.CiReclamante)</label>
                            <label class="form-control col-md-12">@Html.DisplayFor(model => model.DictamenDeReclamacion.CiReclamante)</label>
                        </div>
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.PagadoHasta, new { @class = "control-label col-md-6" })
                            <div class="form-group">
                                @Html.EditorFor(model => model.PagadoHasta, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.PagadoHasta)
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.Causas, new { @class = "control-label col-md-6" })
                            <div class="form-group">
                                @Html.TextAreaFor(model => model.Causas, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Causas)
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.AmparadoPorNt, new { @class = "control-label col-md-12" })
                            <div class="form-group">
                                @Html.EditorFor(model => model.AmparadoPorNt)
                                @Html.ValidationMessageFor(model => model.AmparadoPorNt)
                            </div>
                        </div>

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.FechaAfectacion, new { @class = "control-label col-md-12" })
                            <div class="form-group">
                                @Html.EditorFor(model => model.FechaAfectacion)
                                @Html.ValidationMessageFor(model => model.FechaAfectacion)
                            </div>
                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.FechaDeNormalizacionServicio, new { @class = "control-label col-md-12" })
                            <div class="form-group">
                                @Html.EditorFor(model => model.FechaDeNormalizacionServicio)
                                @Html.ValidationMessageFor(model => model.FechaDeNormalizacionServicio)
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.OperarioId, "Operario que atendio la queja:", new { @class = "control-label col-md-4" })
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.DropDownList("OperarioId", null, String.Empty, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.OperarioId)
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.DespachadorId, "Despachador:", new { @class = "control-label col-md-4" })
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.DropDownList("DespachadorId", null, String.Empty, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.DespachadorId)
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="col-md-4">
                            @Html.LabelFor(model => model.FechaVisitaCliente, new { @class = "control-label col-md-12" })
                            <div class="form-group">
                                @Html.EditorFor(model => model.FechaVisitaCliente)
                                @Html.ValidationMessageFor(model => model.FechaVisitaCliente)
                            </div>
                        </div>
                        <div class="col-md-4">
                            @Html.LabelFor(model => model.FechaNt, new { @class = "control-label col-md-12" })
                            <div class="form-group">
                                @Html.EditorFor(model => model.FechaNt)
                                @Html.ValidationMessageFor(model => model.FechaNt)
                            </div>
                        </div>
                        <div class="col-md-4">
                            @Html.LabelFor(model => model.InspectorId, "Inspector", new { @class = "control-label col-md-6" })
                            <div class="form-group">
                                @Html.DropDownList("InspectorId", null, String.Empty, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.InspectorId)
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="col-md-4">
                            @Html.LabelFor(model => model.FechaRecibidoUebMunicipal, new { @class = "control-label col-md-12" })
                            <div class="form-group">
                                @Html.EditorFor(model => model.FechaRecibidoUebMunicipal)
                                @Html.ValidationMessageFor(model => model.FechaRecibidoUebMunicipal)
                            </div>
                        </div>
                    </div>
                    <div id="equipos" class="col-md-12">
                        <div class="col-md-12">
                            <p><a data-ng-click="showEquipoForm()" href="javascript:;" class="btn btn-success">Nuevo</a></p>
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>Tipo</th>
                                        <th>Marca</th>
                                        <th>Modelo</th>
                                        <th>Número de serie</th>
                                        <th>Nacionalidad</th>
                                        <th>Descripción</th>
                                        <th>Acciones</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr data-ng-repeat="equipo in equipos">
                                        <td>
                                            <strong data-ng-hide="equipo.editMode">{{ equipo.NombreTipoDeEquipo }}</strong>
                                            @Html.DropDownList("TipoDeEquipoId", null, null, new { @data_ng_show = "equipo.editMode", @data_ng_model = "equipo.TipoDeEquipoId", @class = "form-control" })
                                        </td>
                                        <td>
                                            <strong data-ng-hide="equipo.editMode">{{ equipo.NombreMarca }}</strong>
                                            @Html.DropDownList("MarcaId", null, null, new { @data_ng_show = "equipo.editMode", @data_ng_model = "equipo.MarcaId", @class = "form-control" })
                                        </td>
                                        <td>
                                            <p data-ng-hide="equipo.editMode">{{ equipo.Modelo }}</p>
                                            <input data-ng-show="equipo.editMode" type="text" data-ng-model="equipo.Modelo" class="form-control" />
                                        </td>
                                        <td>
                                            <p data-ng-hide="equipo.editMode">{{ equipo.Serie }}</p>
                                            <input data-ng-show="equipo.editMode" type="text" data-ng-model="equipo.Serie" class="form-control" />
                                        </td>
                                        <td>
                                            <p data-ng-hide="equipo.editMode">{{ equipo.Nacionalidad }}</p>
                                            <input data-ng-show="equipo.editMode" type="text" data-ng-model="equipo.Nacionalidad" class="form-control" />
                                        </td>
                                        <td>
                                            <p data-ng-hide="equipo.editMode">{{ equipo.Descripcion }}</p>
                                            <input data-ng-show="equipo.editMode" type="text" data-ng-model="equipo.Descripcion" class="form-control" />
                                        </td>
                                        <td>
                                            <p data-ng-hide="equipo.editMode"><a class="btn btn-info" data-ng-click="toggleEdit(equipo)" href="javascript:;">Editar</a> | <a class="btn btn-danger" data-ng-click="deleteequipo(equipo)" href="javascript:;">Borrar</a></p>
                                            <p data-ng-show="equipo.editMode"><a class="btn btn-success" data-ng-click="save(equipo)" href="javascript:;">Guardar</a> | <a class="btn btn-danger" data-ng-click="toggleEdit(equipo)" href="javascript:;">Cancelar</a></p>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="col-md-8">
                            @Html.LabelFor(model => model.Observaciones, new { @class = "control-label col-md-6" })
                            <div class="form-group">
                                @Html.TextAreaFor(model => model.Observaciones, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Observaciones)
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-10 col-md-2 x">
                            @Html.ActionLink("Cerrar", "Index", null, new { @class = "btn btn-default" })
                            <input type="submit" value="Guardar" class="btn btn-success" />
                        </div>
                    </div>
                </div>
                <hr />
            }


            <hr />
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        //var sigedap = angular.module("sigedap", []);

        sigedap.controller('equipoController', ['$scope', '$http', function ($scope, $http) {
            $scope.loading = true;
            $scope.addMode = false;

            $http.get('/EquipoDañado/Lista/@Model.DictamenDeReclamacionId').success(function (data) {
                $scope.equipos = data;
                $scope.loading = false;
            })
                .error(function () {
                    $scope.error = "Error cargando equipos!";
                    $scope.loading = false;
                });

            $scope.toggleEdit = function () {
                this.equipo.editMode = !this.equipo.editMode;
            };
            $scope.showEquipoForm = function () {
                $("#equipos_form").modal();
            };

            //Used to save a record after edit
            $scope.save = function () {
                $scope.loading = true;
                var equipo = this.equipo;
                $http.post('/EquipoDañado/Editar', equipo).success(function (data) {
                    console.log("Guardado satisfactoriamente!!");
                    equipo.NombreTipoDeEquipo = data.NombreTipoDeEquipo;
                    equipo.NombreMarca = data.NombreMarca;
                    equipo.editMode = false;
                    $scope.loading = false;
                }).error(function (data) {
                    $scope.error = "Ha ocurrido un error guardanto el equipo! " + data;
                    $scope.loading = false;

                });
            };

            //Used to add a new record
            $scope.add = function () {
                $scope.loading = true;
                this.newequipo.ExpedienteDictamenDeReclamacionId = '@Model.DictamenDeReclamacionId';
                var newEquipo = this.newequipo;
                $http.post('/EquipoDañado/Crear/', this.newequipo).success(function (data) {
                    console.log("Creado correctamente!!");
                    $("#equipos_form").modal('hide');
                    $scope.addMode = false;
                    newEquipo.NombreMarca = data.NombreMarca;
                    newEquipo.NombreTipoDeEquipo = data.NombreTipoDeEquipo;
                    newEquipo.Id = data.Id;
                    $scope.equipos.push(newEquipo);
                    $scope.loading = false;
                }).error(function (data) {
                    $scope.error = "Error guardando el equipo! " + data;
                    $scope.loading = false;

                });
            };

            //Used to edit a record
            $scope.deleteequipo = function () {
                $scope.loading = true;
                var equipoid = this.equipo.Id;
                $http.get('/EquipoDañado/Eliminar/' + equipoid).success(function (data) {
                    console.log("Borrado correctmente!!");
                    $.each($scope.equipos, function (i) {
                        if ($scope.equipos[i].Id === equipoid) {
                            $scope.equipos.splice(i, 1);
                            return false;
                        }
                    });
                    $scope.loading = false;
                }).error(function (data) {
                    $scope.error = "Error eliminando el equipo! " + data;
                    $scope.loading = false;
                });
            };
        }]);

        sigedap.directive('select', ['$parse', function ($parse) {
            return {
                link: function (scope, element, attrs) {

                    var select = element[0];

                    if (!select.options.length || !attrs.ngModel) return;

                    var initialValue = "";
                    if (attrs.ngModel == "equipo.TipoDeEquipoId") {
                        initialValue = scope.equipo.TipoDeEquipoId.toString();
                    }
                    if (attrs.ngModel == "equipo.MarcaId") {
                        initialValue = scope.equipo.MarcaId.toString();
                    }
                    //var initialValue = select.options[scope.equipo.MarcaId].value;
                    $parse(attrs.ngModel).assign(scope, initialValue);
                }
            };
        }]);

    </script>
}
